using System;

namespace Havoc.Reflection
{
    [Flags]
    public enum HkTypeFormat
    {
        Void =           0b00000000,
        Opaque =         0b00000001,
        Bool =           0b00000010,
        String =         0b00000011,
        Int =            0b00000100,
        FloatingPoint =  0b00000101,
        Ptr =            0b00000110,
        Class =          0b00000111,
        Array =          0b00001000,
    }

    [Flags]
    public enum HkTypeFormatFlags {
        IsFixedSize = 0b100000, // 0x20
        IsSigned = 0b1000000000, // 0x200
    }

    // IsFixedSize?                     ?
    // IsSigned?                   ?
    // Base Type                          |???? ????
    // hkHalf16        0000 0111 0100 0110 0000 0101
    // hkEnum          0000 0000 0010 0000 0000 0100
    
    //                    ? Is Non-basic floating?
    // float           0001 0111 0100 0110 0000 0101
    // hkReal          0001 0111 0100 0110 0000 0101
    
    //                       ?? IsFloating?
    // hkHalf16        0000 0111 0100 0110 0000 0101
    // hkReal          0001 0111 0100 0110 0000 0101
    // float           0001 0111 0100 0110 0000 0101
    
    //                         ?
    // hkHalf16        0000 0111 0100 0110 0000 0101
    // hkReal          0001 0111 0100 0110 0000 0101
    // float           0001 0111 0100 0110 0000 0101
    // hkUint64        0000 0001 0000 0000 0000 0100
    // hkUlong         0000 0001 0000 0000 0000 0100
    
    //                           ? IsInteger
    // hkUint32        0000 0000 1000 0000 0000 0100
    // int             0000 0000 1000 0010 0000 0100
    // unsigned int    0000 0000 1000 0000 0000 0100
    
    //                            ? IsNumber
    // hkUint16        0000 0000 0100 0000 0000 0100
    // hkInt16         0000 0000 0100 0010 0000 0100
    // float           0001 0111 0100 0110 0000 0101
    // hkHalf16        0000 0111 0100 0110 0000 0101
    // hkReal          0001 0111 0100 0110 0000 0101
    // hkFlags         0000 0000 0100 0000 0000 0100
    // short           0000 0000 0100 0010 0000 0100
    // unsigned short  0000 0000 0100 0000 0000 0100
    
    //                             ?
    // char            0000 0000 0010 0000 0000 0100
    // hkBool          0000 0000 0010 0000 0000 0010
    // hkEnum          0000 0000 0010 0000 0000 0100
    // hkUint8         0000 0000 0010 0000 0000 0100

    //                              ?
    // hkTransform     0000 0000 0001 0000 0010 1000

    //                                ?
    // hkMatrix3       0000 0000 0000 1100 0010 1000

    //                                 ?
    // hkVector4f      0000 0000 0000 0100 0010 1000
    // float           0001 0111 0100 0110 0000 0101
    // hkQuaternionf   0000 0000 0000 0100 0010 1000
    // hkHalf16        0000 0111 0100 0110 0000 0101
    // hkReal          0001 0111 0100 0110 0000 0101
    // T[N]            0000 0000 0000 0100 0010 1000
    // hkVector4       0000 0000 0000 0100 0010 1000
    // hkQuaternion    0000 0000 0000 0100 0010 1000
    // hkMatrix3       0000 0000 0000 1100 0010 1000
    
    //                                  ?
    // hkInt16         0000 0000 0100 0010 0000 0100
    // float           0001 0111 0100 0110 0000 0101
    // int             0000 0000 1000 0010 0000 0100
    // hkHalf16        0000 0111 0100 0110 0000 0101
    // hkReal          0001 0111 0100 0110 0000 0101
    // short           0000 0000 0100 0010 0000 0100
    // hkInt8          0000 0000 0010 0010 0000 0100
    
    //                                   ?
    // None
    
    
    // hkStringPtr     0000 0000 0000 0000 1000 0011
    // char            0000 0000 0010 0000 0000 0100
    // hkUint16        0000 0000 0100 0000 0000 0100
    // hkInt16         0000 0000 0100 0010 0000 0100
    // hkBool          0000 0000 0010 0000 0000 0010
    // hkVector4f      0000 0000 0000 0100 0010 1000
    // float           0001 0111 0100 0110 0000 0101
    // hkQuaternionf   0000 0000 0000 0100 0010 1000
    // hkUint32        0000 0000 1000 0000 0000 0100
    // int             0000 0000 1000 0010 0000 0100
    // hkEnum          0000 0000 0010 0000 0000 0100
    // hkUint8         0000 0000 0010 0000 0000 0100
    // hkHalf16        0000 0111 0100 0110 0000 0101
    // hkReal          0001 0111 0100 0110 0000 0101
    // hkUint64        0000 0001 0000 0000 0000 0100
    // unsigned int    0000 0000 1000 0000 0000 0100
    // hkFlags         0000 0000 0100 0000 0000 0100
    // T[N]            0000 0000 0000 0100 0010 1000
    // short           0000 0000 0100 0010 0000 0100
    // hkVector4       0000 0000 0000 0100 0010 1000
    // unsigned short  0000 0000 0100 0000 0000 0100
    // unsigned char   0000 0000 0010 0000 0000 0100
    // hkQuaternion    0000 0000 0000 0100 0010 1000
    // hkInt8          0000 0000 0010 0010 0000 0100
    // hkUlong         0000 0001 0000 0000 0000 0100
    // hkTransform     0000 0000 0001 0000 0010 1000
    // hkMatrix3       0000 0000 0000 1100 0010 1000
    
    // =================================================================
    // === bool ===
    // hkBool           0000 0000 0010 0000 0000 0010
    
    // === str ===
    //                                      A         A: unknown. is pointer?
    // hkStringPtr      0000 0000 0000 0000 1000 0011
    
    // === int ===
    //                                   A            A: IsSigned
    //                         A========A             A: Size
    // hkUint8          0000 0000 0010 0000 0000 0100
    // hkEnum           0000 0000 0010 0000 0000 0100 // hkUint8
    // hkInt8           0000 0000 0010 0010 0000 0100
    // hkEnum           0000 0000 0010 0010 0000 0100 // hkInt8
    // unsigned char    0000 0000 0010 0000 0000 0100
    // char             0000 0000 0010 0000 0000 0100
    // hkUint16         0000 0000 0100 0000 0000 0100
    // hkEnum           0000 0000 0100 0000 0000 0100 // Uint16
    // hkFlags          0000 0000 0100 0000 0000 0100 // Uint16
    // unsigned short   0000 0000 0100 0000 0000 0100
    // hkInt16          0000 0000 0100 0010 0000 0100
    // short            0000 0000 0100 0010 0000 0100
    // hkUint32         0000 0000 1000 0000 0000 0100
    // unsigned int     0000 0000 1000 0000 0000 0100
    // int              0000 0000 1000 0010 0000 0100
    // hkEnum           0000 0000 1000 0010 0000 0100 // int
    // hkUint64         0000 0001 0000 0000 0000 0100
    // hkUlong          0000 0001 0000 0000 0000 0100
    
    // === float ===
    //                                   A            A: IsSigned
    //                  A===============A             A: unknown, but seems to be fixed value
    // hkHalf16         0000 0111 0100 0110 0000 0101
    // float            0001 0111 0100 0110 0000 0101
    // hkReal           0001 0111 0100 0110 0000 0101 // float
    
    // === array ===
    //                                        A       A: is fixed size?
    //                            A=======A           A: size
    // hkVector4        0000 0000 0000 0100 0010 1000
    // hkVector4f       0000 0000 0000 0100 0010 1000
    // hkQuaternion     0000 0000 0000 0100 0010 1000
    // hkQuaternionf    0000 0000 0000 0100 0010 1000
    // hkMatrix3        0000 0000 0000 1100 0010 1000
    // hkTransform      0000 0000 0001 0000 0010 1000
    // T[N]             0000 0000 0000 0011 0010 1000
    // T[N]             0000 0000 0000 0100 0010 1000
    // T[N]             0000 0000 0000 0110 0010 1000
    // T[N]             0000 0000 0000 1100 0010 1000
}
